<?xml version="1.0" encoding="UTF-8"?>
<sequence name="IN_SEQ_MESSAGE_MEDIATION_PROCESS_API_RSU_CONSOMMATION_SERVICES" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property expression="get-property('registry','conf:/resources/v1/properties/RSU_CONSOMMATION_PROPERTIES_FILE.xml')" name="xmlFile" scope="default" type="OM"/>
    <property expression="$ctx:xmlFile//ApiKeyConsommationServices" name="regPropertyApiKey" scope="default" type="STRING"/>
    <header expression="$ctx:regPropertyApiKey" name="apikey" scope="transport"/>
    <property expression="$url:codeAller" name="uri.var.codeAller" scope="default" type="STRING"/>
    <property expression="$url:idcs" name="uri.var.idcs" scope="default" type="STRING"/>
    <property expression="$url:cnie" name="uri.var.cnie" scope="default" type="STRING"/>
    <property expression="$url:cil" name="uri.var.cil" scope="default" type="STRING"/>
    <property expression="$url:commune" name="uri.var.commune" scope="default" type="STRING"/>
    <property expression="$url:dateDebut" name="uri.var.dateDebut" scope="default" type="STRING"/>
    <property expression="$url:dateFin" name="uri.var.dateFin" scope="default" type="STRING"/>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
    <call blocking="true">
        <endpoint key="conf:resources/v1/endpoints/SYSTEM_API_RSU_CONSOMMATION_SERVICES.xml"/>
    </call>
    <property expression="json-eval($.consommation.codeRetour)" name="codeRetour" scope="default" type="STRING"/>
    <property expression="json-eval($.consommation)" name="consommation" scope="default" type="STRING"/>
    <property expression="json-eval($.consommation.listeConsommations)" name="consommationList" scope="default" type="STRING"/>
    <switch source="get-property('codeRetour')">
        <case regex="^000$|^400$|^500$|^100$|^300$|^600$|^700$">
            <filter regex="^null$" source="get-property('codeRetour')">
                <then>
                    <payloadFactory media-type="json">
                        <format>
							{
							"codeRetour": "$1"
							}
						</format>
                        <args>
                            <arg evaluator="json" expression="get-property('codeRetour')"/>
                        </args>
                    </payloadFactory>
                </then>
                <else/>
            </filter>
        </case>
        <default>
            <filter regex="^200$" source="get-property('codeRetour')">
                <then>
                    <log>
                        <property expression="get-property('consommationList')" name="conso_payload"/>
                    </log>
                    <script language="js"><![CDATA[var consommationListe = JSON.parse(mc.getProperty("consommationList").toString()); 
                                                 var isChecked = false;
													for(var i = 0;i<consommationListe.length;i++)
													   {
													      var current_year= parseInt(consommationListe[i].annee);
													      if(current_year > 2020){
													         isChecked= true;break;
													      }else{
													         isChecked = false;
													      }     
													   }
                                                 mc.setProperty("isChecked",isChecked);]]></script>
                    <log>
                        <property expression="get-property('isChecked')" name="isChecked"/>
                    </log>
                    <filter regex="false" source="boolean(get-property('isChecked'))">
                        <then>
                            <payloadFactory media-type="json">
                                <format>
									{
									"codeRetour": "600"
									}
								</format>
                                <args/>
                            </payloadFactory>
                        </then>
                        <else>
                            <payloadFactory media-type="json">
                                <format>
									{
									"consommation": {
									"codeRetour": "$1",
									"cnie": "$2",
									"nomPrenom":
									"$3",
									"prefecture": "$4",
									"commune": "$5",
									"quartier":"$6",
									"sousQuartier": "$7",
									"immeuble": "$8",
									"complementAdresse": "$9"
									}
									}
								</format>
                                <args>
                                    <arg evaluator="json" expression="$.consommation.codeRetour"/>
                                    <arg evaluator="json" expression="$.consommation.cnie"/>
                                    <arg evaluator="json" expression="$.consommation.nomPrenom"/>
                                    <arg evaluator="json" expression="$.consommation.prefecture"/>
                                    <arg evaluator="json" expression="$.consommation.commune"/>
                                    <arg evaluator="json" expression="$.consommation.quartier"/>
                                    <arg evaluator="json" expression="$.consommation.sousquartier"/>
                                    <arg evaluator="json" expression="$.consommation.immeuble"/>
                                    <arg evaluator="json" expression="$.consommation.complementAdresse"/>
                                </args>
                            </payloadFactory>
                        </else>
                    </filter>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>
							{
							"codeRetour": "600"
							}
						</format>
                        <args/>
                    </payloadFactory>
                </else>
            </filter>
        </default>
    </switch>
    <header action="remove" name="apikey" scope="transport"/>
    <header action="remove" name="X-Client-ID" scope="transport"/>
    <header action="remove" name="X-Request-ID" scope="transport"/>
    <header action="remove" name="X-Request-Application-Name" scope="transport"/>
    <respond/>
</sequence>
